[gd_scene load_steps=4 format=3 uid="uid://dcap4vycba6ai"]

[ext_resource type="PackedScene" uid="uid://b0ppjx1igtkio" path="res://test/model.tscn" id="1_ehxmq"]

[sub_resource type="GDScript" id="GDScript_0hw8a"]
script/source = "extends Node
class_name BattleUnitModel

@export var base: CharacterBase
@export var level: int
@export var is_player: bool

@export var item: ItemBase

@export var hud: BattleHUD
@export var model3D: LoadModelBlockBench

var unit: UnitModel

var skills_combat: Array[SkillModel]
var skills_passive: Array[SkillModel]

var is_fainted: bool

func set_data():
    unit = UnitModel.new(base, level, item)
    skills_combat = unit.skills_combat
    skills_passive = unit.skills_passive
    is_player_unit()
    load_model3D()

func load_model3D() -> bool:
    if base.model3D == null:
        print(\"[!] Character base dont have a model3D\")
        return false
    return model3D.set_data(base.model3D)

func is_player_unit():
    if is_player:
        return
    self.rotation.y = deg_to_rad(180)"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_hib47"]

[node name="Character" type="Node3D" node_paths=PackedStringArray("model3D")]
script = SubResource("GDScript_0hw8a")
model3D = NodePath("model")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
visible = false
mesh = SubResource("CapsuleMesh_hib47")

[node name="model" parent="." instance=ExtResource("1_ehxmq")]
